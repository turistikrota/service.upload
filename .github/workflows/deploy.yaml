name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploying and Running Docker Swarm
        uses: appleboy/ssh-action@master
        env:
          DIR: ${{ secrets.DIR }}
          TOKEN: ${{ secrets.TOKEN }}
          USER: ${{ secrets.USER }}
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
          NETWORK_NAME: ${{ secrets.NETWORK_NAME }}
          SECRET_NAME_1: ${{ secrets.SECRET_NAME_1 }}
          SECRET_NAME_2: ${{ secrets.SECRET_NAME_2 }}
          APP_PORT: ${{ secrets.APP_PORT }}
          HOST_ALIAS: ${{ secrets.HOST_ALIAS }}
          REDIS_HOST_ALIAS: ${{ secrets.REDIS_HOST_ALIAS }}
          HOST_IP: ${{ secrets.HOST_IP }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          envs: DIR,TOKEN,USER,IMAGE_NAME,CONTAINER_NAME,NETWORK_NAME,SECRET_NAME_1,SECRET_NAME_2,APP_PORT,HOST_ALIAS,HOST_IP,REDIS_HOST_ALIAS
          script: |
            cd $DIR
            git checkout main
            git pull origin main
            docker build --build-arg GITHUB_TOKEN=$TOKEN --build-arg GITHUB_USER=$USER -t $IMAGE_NAME .
            docker service rm $CONTAINER_NAME
            docker service create --name $CONTAINER_NAME --network $NETWORK_NAME --secret $SECRET_NAME_1 --secret $SECRET_NAME_2 --env-file .env --host $HOST_ALIAS:$HOST_IP --host $REDIS_HOST_ALIAS:$HOST_IP --publish $APP_PORT:$APP_PORT $IMAGE_NAME
